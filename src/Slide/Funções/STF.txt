//Definições : 
//mx = Movimento em uma dada direção.
//me = Movimento a Esquerda do observador que está com uma visão frontal ao monitor.
// md = -me Oposto do movimento a esquerda.
// mt = Movimento acima do observador que está com uma visão frontal ao monitor.
// mb = Movimento abaixo do observador que está com uma visão frontal ao monitor.
// (( = Operador binário pertence.
// OB = {x/x é um operador booleano}
// OA = {x/x é um operador aritimético}
// QB = {x/x é um quantificador booleano}
// V = {x/x é um vetor}
// ^, ||, -> e <-> (( OB  
// +,- (( OB || OA
//w = width
//x (( EH -> xw = largura de x.
//EH = {x/x é um mais de um Elemento Html}
// , (( OB e sua função é atuar como um separador de afirmações OB.
// EX = Existe (( QB
// Pe(x,y) = Plano de eixos x e y.Sendo x = eixo horizontal = md e y = eixo vertical = mt
// -> EX -Pe(-x,-y), -x = me, -y = mb    
// d,t (( V -> EX v = d + t = [d,t] <-> mPe(x,y), d (( x, t (( y.  
//MX(E,E.offsetX) = o movimento de um dado elemento na direção X .
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//d = div
//Df = display flex
//jc = justify content
//R = row
//C = column
//A = adaptaram
//FD = flex-direction
//w = wrap
//nw = nowrap
//D = dimensões
//~ = não
//P = position
//Ab = absolute

S1-dDf, d1,d2 (( d, dFD = R v C, djc = w v nw --> 
d1A,d2A
S2-dDf, d1,d2 (( d, dFD = R, djc = nw --> 
d1A,d2A, d1Da,d2Da
S3-dDf, d1,d2 (( d, dFD = R, djc = nw, dP = Ab --> 
d1~A,d2~A, d1~DA,d2~DA*
S4-dDf, d1,d2 (( d, dFD = R, djc = w, dP = Ab --> 
d1A,d2A, d1DA,d2DA
