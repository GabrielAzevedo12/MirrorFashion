class Person {
    constructor(first, last) {
      this.first = first;
      this.last = last;
    }
  
    get name() {
      return `${this.first} ${this.last}`;
    }
  
    // üëáÔ∏è Define setter
    set name(name) {
      this.first = name.split(' ')[0];
      this.last = name.split(' ')[1];
    }
  }
  
  const p1 = new Person('John', 'Smith');
  
  // ‚úÖ Use setter
  p1.name = 'Bobby Hadz';
  
  console.log(p1.name,p1); // üëâÔ∏è "Bobby Hadz"
  
  class Condi√ß√£o {
    get c() {
        return this._c
    }
    set c(c) {
        this._c = c
    }
    constructor(c) {
        this._c = c
    }
}
var tCondi√ß√£o = new Condi√ß√£o(true)
console.log(tCondi√ß√£o,tCondi√ß√£o.c)
var an√°liseBooleana = (x,y) => {
    if (x===y) {
        console.log(true)
    } else {
        console.log(false)
    }
}
exports.tCondi√ß√£o = tCondi√ß√£o
tCondi√ß√£o = require("./testeClass2.js").tCondi√ß√£o2
console.log(tCondi√ß√£o,tCondi√ß√£o.c)
  







  
  
  